2001-11-14  Ray Tomlinson  <RTomlinson@bbn.com>

	* PopulateDb.java:
	Remove superfluous (and NPE producing code) when trying to find
	the "agent" ancestor of a component. Some components don't have an
	agent ancestor.

	* RecipeComponent.java:
	Define the name of the recipe query file to be added.

	* PDbBase.java:
	Add queries for recipes from a secondary query file named
	recipeQueries.q found in the config path. This allows recipe
	queries to be added without disturbing the the queries in
	PopulateDb.q

2001-11-12  Ray Tomlinson  <RTomlinson@bbn.com>

	* DoubleRange.java: 
	* FloatRange.java: 
	* IntegerRange.java: 
	* LongRange.java: 
	* StringRange.java: 
	* RangeBase.java: 
	* Range.java:
	Make Range objects Comparable by extending Comparable. Implement
	compareToMethod in RangeBase class by comparing the toString()
	values. This allows presentation of the allowed values as a sorted
	list.

2001-11-09  Ray Tomlinson  <RTomlinson@bbn.com>

	* PDbBase.java:
	Commit before close only if auto-commit is off. Turn off
	auto-commit when opening the connection.

2001-11-07  Ray Tomlinson  <RTomlinson@bbn.com>

	* PopulateDb.java:
	Compute the "assemblyMatch" predicate so queries can readily test
	if an assembly_id belongs to the current trial or not.

	* ConfigurableComponent.java:
	Add hasUnboundProperties() method so we can easily test if it's ok
	to use share a component. Components with unbound properties can't
	generally be shared because binding the properties in one context
	would invalidate it in other contexts.

	* ComponentProperties.java:
	Add hasUnboundProperties() method to sense whether a Component has
	any unbound properties.

2001-11-06  Ray Tomlinson  <RTomlinson@bbn.com>

	* PopulateDb.java:
	Add methods to give access to database for use by
	ComponentInsertionRecipe.

	* ConfigurableComponent.java:
	Implement two argument variant of modifyComponentData by calling
	the single argument variant.

	* ComponentProperties.java:
	Add variant of modifyComponentData accepting a PopulateDb to pass
	in context to recipes. The default implementation just calls the
	single argument variant so existing classes are not changed.

	* PopulateDb.java (Repository):
	Now extends PDbBase.

	* PDbBase.java (Repository):
	Abstracted out the non-trial/experiment/assembly part of
	PopulateDb. This part deals with the lib part of the database
	without reference to trials, assemblies, or experiments.
	Added code for checking the status and deleting recipes.

2001-10-29  Ray Tomlinson  <RTomlinson@bbn.com>

	* PopulateDb.java (Repository):
	If a property of a MetricComponent has a null or empty valid, skip
	writing it to the database. Such properties are _not_ reflected as
	plugin parameters. This means that if the verb is not set, there
	is no "verb=xyz" parameter. This also means that all the other
	unset parameters will be absent as well.

2001-10-26  Ray Tomlinson  <RTomlinson@bbn.com>

	* PopulateDb.java (Repository):
	MySQL Conversion.
	Convert insert into table from same table query into a multi-part
	query as described by the query file. Requires corresponding
	change to PopulateDb.q file.
	Also remove unused (and non-existant) query definitions.

2001-10-25  Ray Tomlinson  <RTomlinson@bbn.com>

	* ComponentProperties.java (Repository):
	Add getProperty(String localName) to get a property using its
	local name (rather than a composite name).

2001-10-24  Ray Tomlinson  <RTomlinson@bbn.com>

	* PopulateDb.java (Repository):
	Fix bug 641.
	Store the (last) names and values of the properties of the metrics
	saved with an experiment.

2001-10-23  Ray Tomlinson  <RTomlinson@bbn.com>

	* PopulateDb.java (Repository):
	Fix bug 629 "Queries to clean trials are incorrect"
	TRIAL_ID was used instead of ASSEMBLY_ID to identify what to
	delete. Also revised the query into two parts: one to identify
	what to delete and another to do the delete. Mysql precludes doing
	this in one operation (oh so lame).
	Fix bug 630 "component_alib_id for hosts should not include the society"
	Make the default alib id be just the name of the component and
	special case for plugin which includes the agent name.	
	Fix bug 630 "Metrics added to an experiment are not written to the db"
	Add code to write the list of metrics of the experiment to the
	database.

2001-10-22  Ray Tomlinson  <RTomlinson@bbn.com>

	* PopulateDb.java (Repository):
	Fix bug 620.
	Set description of new experiment to be the same as its name (no
	better description is available) instead of experimentId which is
	not user friendly. Also, the description is currently being used
	to populate the experiment selection menu making that unfriendly
	as well.

2001-10-19  Ray Tomlinson  <RTomlinson@bbn.com>

	* PopulateDb.java (Repository):
	define expt_id for all queries. Minor spelling changes (e.g. csm
	-> csmi).

	* TestPopulateDb.java (Repository):
	Several fixes to accomodate new naming conventions.

2001-10-19  Ray Tomlinson  <RTomlinson@bbn.com>

	* PopulateDb.java (Repository):
	Fix clone-cleaning code. Changed to remove all csmi and hna type
	assemblies.
	(Repository):
	Write component parameters whenever the component is added, not
	just when the lib component is added. Duhhh.
	Properly quote strings containing quotes by doubling them.

2001-10-18  Ray Tomlinson  <RTomlinson@bbn.com>

	* ComponentData.java (Repository):
	Define HOST constant for identify host ComponentData.

	* PopulateDb.java (Repository):
	Record pre-existing parameters and relationships so new ones can
	be detected and placed in the CSMI assembly rather than the CSHNA
	assembly.
	Handle hosts including host-node mappings.

	* GenericComponentData.java (Repository): 
	* ComponentData.java (Repository): 
	* AgentAssetData.java (Repository):
	Add getters for things have setters and indexes (parameters,
	relationships, etc.).

2001-10-17  Ray Tomlinson  <RTomlinson@bbn.com>

	* PopulateDb.java (Repository):
	Avoid duplicate relationships. Fix :cmt_type: substitution.

2001-10-16  Ray Tomlinson  <RTomlinson@bbn.com>

	* TestPopulateDb.java (Repository):
	Many revisions to adapt to new API of PopulateDb. Mostly concerned
	with distinguishing CMT, CSMART, and CSM assemblies.

	* Experiment.java (Repository):
	Add saveToDB function that writes additional assemblies to the
	database for the host-node-agent assigments, metrics, and impacts.

	* PopulateDb.java (Repository):
	Many modifications to treat CMT, CSMART, and CSM assemblies
	separately. Added experiment/trial cloning and cleaning.

2001-10-12  Ray Tomlinson  <RTomlinson@HEFEWEIZEN>

	* PopulateDb.java (Repository):
	Use alib id from ComponentData when available. Clean out other CSM
	assemblies from the current trial before populating with new
	condiments.

2001-10-11  Ray Tomlinson  <RTomlinson@HEFEWEIZEN>

	* PopulateDb.java (Repository):
	New class populates the config database from a ComponentData
	structure.

	* ComponentData.java (Repository):
	Change Cluster to agent. Change capitalization to all lower case
	to match the capitalization used in the database.

2001-09-26  Ray Tomlinson  <RTomlinson@bbn.com>

	* PropertyEvent.java (Repository): 
	* Property.java (Repository): 
	* ConfigurableComponent.java (Repository):
	Add versions of "addProperty" to add invisible properties. This
	avoids the window of inopportunity between adding the property and
	making it invisible. The added methods are named
	addInvisibleProperty.
