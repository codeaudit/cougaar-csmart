CSMART Release Notes

Release 10.4:
This release includes a major reworking on the Console.
- Broke up the Console into Model and View.
- Seperated out the knowledge of Nodes into their own classes,
  also Model and View.
- Fixed buttons to prevent unknown button states.
- The complete refactoring fixed bugs: 1946, 2640, 1626, 1639, 2321, 1637.
- Added a new tool, Viewer, (under ui/organization) for viewing and validating
  XML based societies (description follows).

The Viewer tool (ui.organization.Viewer) supports selecting agents to
include in a society.  After selecting the appropriate agents, the user
typically saves the society to an XML file, then applies ruby rules to the
society in order to produce a runnable society.  This tool is intended as
an aid in composing and validating societies that will be composed from
CSV or XML files and ruby rules.

The Viewer tool can read CSV or XML files (using the commands on the File
menu).  These files describe agents and their facets (i.e. roles,
echelons, superiors, etc.).  The Viewer tool displays the
agents in a tree.  If the agent descriptions were read from a CSV file,
then the user can select or deselect agents to include in the society by
right-clicking on the agent name. (Agent descriptions read from XML files
are not modifiable.)  Deselected agents are displayed in gray.  When an
agent is deselected, neither it or its subordinates are included in the
society.

The Viewer tool can also be used to Validate supply chains.  Select the
Validate command from the File menu and the Viewer will display a dialog
that shows supporting relationships for all the selected agents, and any
supporting relationships that are not filled.  The Validate algorithm
mirrors the Service Discovery done in a running society; hence, this is
a way to verify that Service Discovery should find necessary providers
when the society is run.

After selecting a set of agents, the Viewer tool can write the results to
either a CSV file or an XML file (using the commands on the File menu).
If the results are written to an XML file, then that file can be used
as input to the ruby rules to produce a runnable society.

The Experiment Console can now run stand alone, using the appropiate CONSOLE
script in the bin directory.

The Experiment Console now has a the ability to load in an ACME XML file and run
it, assuming the AppServers are running on the specified machines and the other
XML parameters are setup correctly.  At the very least, the XML configuration can
be viewed in the Configuration Window.  This is a read only display.

To load in an XML file Use the new item in the file menu: "Load XML Society".

Release 10.3:
This patch release includes updates to various 1AD configurations, and
related changes to database table definitions.

- Removed the domain data file CIP/csmart/data/database/Domain_MySQL.zip.
  This file contained a sql script which loaded domain
  data into the csmart configuration database.  This data
  has been made into separate .csv files which are now loaded
  simultaneously with the csmart configuration database via the
  load script ./load_1ad_mysql.sh[bat].
- Added new database loading script 'load_1ad_all.sh[bat]' which
  loads the domain data from CIP/dbms/data/mysql/1ADDomainData.sql
  as well as the configuration database.  This script takes an
  additional parameter which is the name of the domain database
  to be loaded.
- New oplan propagation mechanism.  Each agent reads the database
  for the oplan and its org activities. GetOplanPlugin replaced by
  OplanReaderPlugin.

Release 10.2:
This is a minor patch release, preparing for future work.

- Disabled the Society Monitor's Topology view. It used the old
  Topology service, which is being removed.
- Began work on support for viewing XML society definitions.
- Moved CSMART related .q files to csmart/data/common. The preferred
  location for recipeQueries.q is now csmart/data/common. However,
  files in the old CIP/configs/common _will_ still be found.
- Provide new -D argument specifying to explicitly load components from the
  CSMART database at runtime. Note that DB exports that preserve the
  -D arguments but want to run from files should remove or change that
  argument.
- Added new database dump: refconfigdb.zip. This file includes the 1AD
  oplan and OrgAssets as reference data, as well as the 1AD Domain
  data contained in the other local dump. Use this as the definition
  of the org.cougaar.refconfig database when running 1AD societies
  from XML files. See configs/ul/Readme.txt. See also the added /new
  directory for table definition files, and the associated Readme.

Release 10.0:
This is a major Cougaar release, incorporating all previous fixes plus
some major code cleanup, in preparation for this year's
changes. Database definition files have been updated and should be
reloaded, in particular to reflect the obsolesence of ClusterIdentifier.

- Removed old csmart/bin/build.xml Ant script. Instead use generated
  Ant build script in csmart/build.xml. Targets are identical, but
  developers should reset COUGAAR_DEV_PATH from csmart/tmpdir to
  csmart/tmp/classes. Additionally, any setting in ~/.ant.properties
  should probably instead be in csmart/module.properties.
- Removed CSMART Domain. Edit your configs/common/LDMDomains.ini as
  necessary.
- Replace Default Workspace.bin that used to contain serialized
  objects, with a much simpler and faster Default Workspace.xml - a
  human-editable file containing just the experiment names. All named
  experiments will be re-loaded from the database when you restart CSMART.
- Use SimpleAgent instead of ClusterImpl as default Agent class. The
  provided database csv files have been updated, but ClusterImpl will
  still work just fine.
- ClusterIdentifier has been removed, in favor of MessageAddress. The
  provided database csv files have been updated, and should be
  reloaded. In addition, any previously generated and saved
  experiments will need to be updated. Once loaded in the database, run
  the provided update script,
  csmart/data/database/scripts/mysql/sql/cluster-id-removal.sql. In
  addition, at CSMART experiment load time, any instance of
  ClusterIdentifier will be replaced by MessageAddress.
- Replaced generic Completion Servlet in Default Servlets recipe with
  the GLM specific completion servlet, to more accurately portray
  society completion. (Bug 2524)
- Updated AdaptivitySupport recipe to reflect core/planning split, and
  new fact that AEViewerServlet does not use
  BlackboardServletComponent.
- Removed the old and obsolete Agent Insertion recipe. Use the
  Complete Agent recipe instead.
- Removed the old and obsolete Component Insertion Recipe. Use the
  Specific Insertion Recipe instead.
- Remove misleading "idleness" graphs in Console.
- Remove unused multi-trial and property experimental-values code.
- Performance improvement on experiment save: New modified flag on
  components used to limit which components are compared with
  database, reducing DB interactions.
- Bugs 2071 and 2072: Avoid runtime exceptions in the Console if the
  current trial counter somehow gets out of line. This does not
  avoid the counter from getting off, but should avoid runtime errors
  if this happens.
- Clean up export-all-recipes.sh script
- Fixed bug 2463 in PDbBase
- AspectValue cleanup (bug 2430).
- Changes to allow loading a pre-layout csmart.dot saved graph file in
  Society Monitor (bug 2261 support).
- Bug 2345: Fixed startup parameter for agent.startTime
- Replace uses of insertion point literals with constants in core
  where available.
- Removed obsolete ABCImpacts, ABC society, scalability society, and
  supporting classes and configuration files.

Release 9.6:
Final release along the 9.4 branch with all Fall 2002 efforts.

Release 9.4.1.3:
A further patch release to support Fall 2002 efforts.

- Bug 2218: Large societies, under heavy load, may "thrash" when you
  try to stop the run by hitting "Stop" in the Console. The result is
  a long wait time to kill the society, and many messages like:
10:55:13,970 WARN  [CSMARTConsole] - Remote Process for NCA-NODE says it is not
alive. Marking it dead.

  The fix is to turn down AppServer polling when the user is stopping
  the society, and in case of certain timeout problems while killing
  the Node, retry up to 5 times.

- Added new script export-all-recipes.sh for convenience in exporting
  all of the recipes in a configuration database.
- Fixed newlines in community_entity_attribute.csv file (bug 2354)

Release 9.4.1.2:
This patch release includes additional fixes to support the Fall 2002
Ultra*Log integration. These include performance improvements, and
some fixes to the Component Collection Recipes. It also includes a
change to the 1AD defined societies, that require reloading part of
the CSMART database. Note in particular the change to the Experiment
save behavior (bug 2002).

- Bug 1988: This is a change to the CSMART included 1AD society
  definitions. You must re-run csmart/data/database/scripts/mysql/load_1ad_mysql.[sh/bat]

- Bug 2087: Another change to the database. Remove the
  UniversalAllocator from the OSC agent. Add 2 new recipes: One to add
  the UniversalAllocator back, and one included by default, to add
  instead the Ammo Packer to the OSC Agent.

- Bug 2002: Saving experiments is incredibly slow. This is a partial
  fix, which changes some existing functionality. Recipe target
  queries (in recipeQueries.q) look in the database to decide where to
  apply a recipe. They usually just look for Agents or NodeAgents by
  name. Sometimes they look at community information. Theoretically,
  they could also look at Plugins in the Agents, Plugin parameters, or
  Agent relationships, or other such Agent-internal details. However,
  this is not normally done. The change included with this fix changes
  this behavior. It is no longer possible, by default, to have a
  recipeTargetQuery that looks at PropertyGroups, Relationships,
  Plugins, Binders, etc. If you require this ability, un-comment the
  line in the CSMART startup scripts that set the new property
  org.cougaar.tools.csmart.allowComplexRecipeQueries to true. This
  change should dramatically reduce Experiment save times,
  particularly for experiments with many recipes.

- Bug 2002: Multiple additional optimizations to the manipulation and
  traversing of internal data structures, giving overall speedup
  throughout CSMART operations. Users should see no difference, except
  in faster operations. These changes include:
  - Multiple optimizations to getProperty and getProperties
  (ConfigurableComponent). Rely on the fact that Component names
  reflect their position in the hierarchy and that Property names
  similarly reflect which Component they hang off of.
  - Intern short (< 16 chars) String Property values
  (ConfigurableComponentProperty)
  - Intern SimpleNames (as these often get repeated).
  - Avoid changing Property value if the new one is .equals to the old
  (not just checking ==) (ConfigurableComponentProperty)
  - Cache Name hashCodes, toStrings, and sizes (MultiName, etc)
  - Optimize some name traversals (MultiName, etc)
  - When changing Component name, don't recurse up
  (ConfigurableComponent)
  - Add error check to look for adding Properties to illogical spots. (ConfigurableComponent)
  - Cache loggers to re-use instances as much as possible (CSMART.java)
  - Remove an un-used logger (PropertyBase)
  - Buffer workspace file input/output (Organizer)
  - Small bug fix to unused getInvisibleProperty(String)
  (ConfigurableComponent)
  - Simplify serialization to workspace file, for quicker
  serialization and a smaller file (ConfigurableComponent)
  - Multiple additional error checks in ConfigurableComponent
  - Further optimizations to getPropertyNames to avoid extra tree
  traversals
  - Optimize getInvisibleProperty to do same as getProperty
  - Clean up old InvisibleProperty implementation

- Bug 1810, 1977: If re-calculating an ALIB_ID because only the name
  changed, look to see if the new ALIB_ID is also already there - use
  it if the entry is identical, otherwise loop with yet another ALIB
  ID. This fixes problems in changing the name of an agent in a
  Complete Agent recipe, and in using a Component Collection recipe.

- Bug 2025, 2032: Deleting a recipe from the DB after deleting it from the
  workspace failed to completely delete Complete Agent and Component
  Collection recipes, resulting in errors on import.

- Bug 2039: Copied Component Collection recipes lost some
  parameters. Completed missing field copying (in BaseCDATAComponent),
  simplified CDATA generation and copying logic.

- Bug 2040: Renaming a Component Collection recipe caused you to lose
  some components. Fixed name changing of components
- Bug 2015: Log out the start and finish times when saving an
  experiment, to aid in debugging the above bug.
- Bug 2000: If a recipe fails to load, avoid later NPEs.
- Bug 2000: When using ConfigFinder to find a file, if you cannot
  locate it, be careful to look for the null return -- particularly in
  the ServletGroupInsertionRecipe.
- Bug 2000: Extra error checks to look for case of failing to find
  servlets.txt file.
- Bug 2012: The HomeLocation slot of MilitaryOrgPG was incorrectly
  parsed in some cases. This has now been fixed.
- Bug 2022: The "csmart/bin/CSMART" script erroneously ran CSMART
  within jdb.
- Bug 2008: If an AppServer dies unexpectedly, it is possible to get a
  NullPointerException in a couple places. Avoid that.
- Bug 1958: Fix small typo in comment in dumped INI files
- Bug 2009: Adding parameters to components when editing a Society,
  Complete Agent recipe or Component Collection recipe would start
  over-riding the last parameter starting with the 12th parameter
  (named param-10). You may now add as many parameters as you wish.
- Bug 2021: Forbid adding an Agent with the same name as the recipe
  from which you are adding it.
- Bug 2021: When editing the Agent name parameter in a Complete Agent
  or Component Collection recipe, reject names the same as the recipe
  name.
- Bug 2064: Sort recipe target queries by name in drop-down lists.
- Bug 2105: Print a separate CSMART build time, as well as the core
  build time, to support updating just the CSMART jar without the
  rest of core.
- Bug 2097: When hitting configure on an experiment and editing that
  society, agents could be duplicated. In addition, various agent
  comparisons were slow.
- Avoid complaints if a community entity type has trailing whitespace.
- Bug 2107: Fix CSMART.q query for Agent names so that agents in a
  society, with no sub-components can be loaded.

Release 9.4.1.1:
This release includes bug fixes to support the Fall 2002 Ultra*Log
integration, not found in time for the 9.4.1 release.
CSMART fixes include multiple usability enhancements.

Significant Bugs fixed:
- Remove the default Global Command Line argument to load Message
  Transport aspects (org.cougaar.message.transport.aspects) - these
  should be loaded through Recipes now. (Bug 1944)
- When adding an Agent in the Configuration Builder, and empty (all
  spaces) name means to cancel the addition. Trim excess whitespace
  off of agent names. (bug 1882)
- Changing the value of a property in the Configuration Builder from
  null to not-null gave an NPE. (bug 1885)
- Do not allow empty host or node names in Experiment Builder,
  trimming any excess spacess off the names. (bug 1890)
- When querying for a file, selecting none means to cancel the
  action. Additionally, closing the window means to cancel. And if
  trying to read in a file, complain if the file does not exist. (bugs
  1894, 1893 - initializing a society from files, 1895 - importing HNA,
  1899 - importing communities, 1906 - reading Java properties file)
- Do not allow empty Attribute IDs when editing communities. (bug
  1905)
- Do not allow empty community names, trimming excess whitespace. (bug 1900)
- When editing an Agent in the Configuration Builder, do not allow
  removing the AssetData folder, since it cannot be re-added. To not
  include an Organization or Entity asset, simply leave out the
  OrgData and OrgReport Plugins (or AssetData, etc), and remove any
  PropertyGroups and Relationships. (bug 1883)
- Avoid a rare NPE when trying to load communities from a bad file
  (bug 1902)
- Trim off whitespace in command line argument names and values, and
  do not permit empty names. (bug 1909)

Other bugs fixed:
- Re-enable the "About CSMART" help menu items in the Sociey Monitor
  (bug 1910)
- Remove the "Org Groups" section of the Threads view in the
  Experiment Builder and in the CMT Dialog, if there are none in the
  experiment. (bugs 1892, 1888)
- Put a reasonable label on a number of dialogs. (bugs 1881 - new
  Experiment from file, 1896 - import HNA,
  1907 - apply command line arguments from file, 1918 - save a Society
  Monitor graph, 1916 - open a saved Society Monitor graph)
- Ensure that all OK/Cancel dialogs treat closing the window like
  Cancel, and not like OK. (bugs 1926, 1928, 1930, 1916, 1888)
- Clean up and clarify the dialog to set the Refresh interval in the
  Society Monitor topology view: Closing the window or canceling is not
  an error, setting the interval to 0 means no auto-refresh. (Bug
  1912)
- Allow specifying no protocol or no port when entering a URL to
  monitor in the Society Monitor. No port means to use the standard
  defaults for the protocol (80 or 443). (bug 1878)
- Clarify and fix the behavior of Save and Save As in the various
  Society Monitor views. These now behave as expected: Save is disabled
  until the view has a file to save under, Save As defaults to the
  previously selected file, if any, otherwise allows you to select a
  file. (bug 1919)
- Clarify and fix the dialog to get a Thread size limit in the Society
  Monitor. Negative values mean unlimited size, 0 or empty means to
  cancel, and invalid numbers require re-entering the dialog. Bug
  1923.
- Allow re-entering a value when entering a bad number in the Console'
  "Set View Size" dialog. (bug 1928)
- Capitalize Node status descriptions in the Console (bug 1875)
- Re-order items in the Experiment Controller's Help menu. (Bug 1925)
- Clean up tool frame label when opening a tool without a selected
  Experiment. (Bug 1879)
- In the console's Node Info screen, the table of command line
  arguments should not be editable. (bug 1874)
- Remove an erroneous error check when editing communities. (bug 1904)
- Avoid listing experiment twice in Society Monitor "Monitor..."
  dialog (bug 1914)
- Further cleanup various help files for readability (bugs 1880, 1913)
- Remove some overly-verbose debug logging in the Society Monitor.
  (bugs 1922, 1921)


Release 9.4.1:
This release includes bug fixes and feature enhancements to support UL
fall integration not available in time for the 9.4 release. In
particular, this release changes the database table names, and the
Plugins used in the default society configurations, so that they use
the UL Adaptive Logistics Plugins. You should reload your database (entirely).


Database changes:
- Renamed mysqldump.9.2.txt to 1ADDomainData.sql and zipped it up (you
  must unzip it to use it). Also added new tables to
  this dump that are required by new adaptive logistics Plugins.
- Database table names have been shorted, removing extraneous v4 and
  v6 prefixes. Recipe or experiment exports MUST be processed to
  remove the "v4_" from the beginning of table names. Use the script
  provided in csmart/bin to do so (v4_v6_conversion.[bat/sh]).
- Removed use of old logistics Plugins in the included 1AD societies,
  replacing them with the new, adaptive Plugins (from the Ultra*Log
  Adaptive Logistics thread). Note that with this change, certain
  Classes of Supply (Threads) are disabled until next year. After reloading your
  CSMART database, you must include the new adaptive jar files in your
  CIP/lib to run the 1AD-based societies. Also note that you should re-create from scratch any
  1AD-based societies that you use, to take advantage of the new Plugins.
- Updated the domain data in the CSMART database to avoid some
  errors (bug 1531). You must reload the .sql file you get from unzipping
  Domain-MySQL.ZIP (see the Install instructions).
- Database load scripts are now generated
  from ER/Studio files, which themselves are available in the
  csmart/data/database/db_src directory (with screenshots in
  csmart/data/database/doc). This change is transparent to the user.
- MySQL load scripts now work on networked drives if you have MySQL
  server 3.23.49 or better and use the new "local" option to the .sh
  script. (bug 1257)
- Multiple fixes to recipe and experiment export scripts to support
  new recipe types.
- A load_communities.sh script has been provided in csmart/data/database/scripts/mysql
  to load community tables from csv files that are in the original 9.2 format
  (i.e. no ASSEMBLY_ID column). (bug 1799) The script loads community_attribute.csv and
  community_entity_attribute.csv tables only and will not work on csv files that
  contain an ASSEMBLY_ID column.
  See csmart/data/database/README.txt for usage and instructions.

Other setup changes:
- Upgraded to latest version of JCChart library (renaming jar file to
  jcchart.jar). Be sure you have the latest cougaar-support.zip
- As per above, be sure to run the v4_v6_conversion script on any
  recipe or experiment exports before importing them.
- Note that since, as of 9.4, Agent Insertion Recipes always include
  an OrgAsset, that if you import such a recipe from a prior release,
  you will see some errors when you load it from the database:
11:48:17,870 ERROR [AgentInsertionRecipe] - Unknown property: Include Item
Identification PG=true in component AGG-Agent
11:48:17,877 ERROR [AgentInsertionRecipe] - Unknown property: Include Org
Asset=true in component AGG-Agent
  You should ignore these errors. But you should then edit your
  recipe, to fill in all the attributes of the Agent and its new
  OrgAsset (bug 1594).
- We have fixed a bug from version 9.4 that made Agents created with
  an AgentInsertion recipe give runtime errors. However, as per above,
  be sure to edit any imported Agent recipes and "toggle" (change, then change back)
  the name of your Agent, to ensure you get the correct
  functionality. The problem was missing ClusterPG and
  ItemIdentificationPGs on the included OrgAsset (bug 1596)

Recipe changes
- Adding additional servlets is no longer possible via the Servlet
  Insertion Recipe. To add additional servlets, use the Specific
  Insertion Recipe. (Bug 1521)
- Added a new recipe "Complete Agent" that allows the creation of an Agent
  including all plugins, relationships and asset data in one GUI
  configurable recipe.  We suggest using this recipe instead of using
  the AgentInsertionRecipe with multiple SpecificInsertionRecipes to
  fill out the contents of the Agent.
- Also added a very powerful new Recipe, called "Component Collection"
  that allows specifying an arbitrary collection of Components to add
  all at once. This would be useful if, for example, your new feature
  requires adding a Plugin in every Node, a different Plugin in every
  Agent, plus adding another whole new Agent with its components.
- Added a Community Plugin recipe to base experiments. By including
  this recipe, all Agents and Node Agents will get the Community
  Plugin, allowing full Community and ABA support in all Agents and
  Nodes by default (bug 1587).
- Bug 1596: OrgAssets created using the AgentInsertionRecipe were
  missing the ClusterPG and ItemIdentificationPG, resulting in runtime
  Exceptions.
- The Parameter Insertion Recipe now explicity modifies _all_
  components that match the given name in an Agent, not just the first
  one. That "name" is also interpreted as a "Class" or as a "Name"
  (these two slots are usually the same, and only differ if you have
  two components of the same class in the same Agent).
- The Adaptivity Support recipe now allows specifying nearly arbitrary
  plays file names, including using a single file for all Agents. (Bug 1687)

Console and AppServer changes:
- There have been extensive changes to the Application Server, and to
  the CSMART Console (aka Experiment Controller) to take advantage of
  these. For most users, these changes need not change how your society runs.
- Console (aka Experiment Controller) has new menu items and
  functionality, to support "discovery" of new Nodes that are created
  on an AppServer by a process other than CSMART. By selecting
  "Attach", users can discover new Nodes (or Nodes that had died
  / become disconnected, and have re-appeared) and choose to "attach"
  to them, at which point CSMART will allow monitoring these Nodes as
  though CSMART had started them originally. Note that if your CSMART
  process dies (or you kill it without stopping your society), all
  Nodes will continue to run (due to the inclusion in the default
  Global Command Line Arguments of the new property
      org.cougaar.tools.server.swallowOutputConnectionException=true
  Once CSMART has died, you can restart it and re-connect to the Nodes
  if you like. Or you may kill them (from the Application Server menu
  item). Note the new terminology: you "attach" to an already running
  Node, if you want a Node output window for it, and the ability to
  kill and restart it. Killing a node means actually killing the
  process. You can also kill a "listener", which means that you
  "detach" your existing Node output window, without affecting the
  running Node. When closing the CSMART console, you will be given the
  option of killing your society (the old behavior), or just detaching
  from it, leaving the society running.

  The console keeps a list of Application Servers that it will monitor
  for new Nodes. This list is usually the set of servers defined in
  your experiment. But you can add to or remove from this list, via
  the menu items on the "Application Server" menu. By default, CSMART
  polls the known Application Servers every 30 seconds. This frequency
  is configurable, also via the menu item on the "Application Server"
  menu (you may disable polling by setting the frequency to 0).
  This fixes bugs 997, 1022, and partially addresses 1028.
- The Console (Experiment Controller) tries hard to find the GLS
  Servlet to connect the client UI (bug 1560). You MUST
  specify the web server http or https port for the NCA agent through
  the CSMART Experiment Builder in order for CSMART to accurately find
  the GLS Init Servlet. If it can't find it, you can specify it explicitly.
- The Console's window showing Agent contents will now show the load
  priority of the component, and will also show the components in the
  Node Agent.
- We have sped up stopping a run, by talking to each node in parallel (bug
  1416).
- Keep node log files up-to-date (bug 931).
- Keep Node Info windows a little smaller and add scrollbars (bug
  1525)

Communities related changes:
- You may now import a communities.xml file into your experiment (bug
  1454), augmenting any existing community definition for that
  experiment. (Courtesy of Mobile Intelligence, Inc). You will be
  prompted to do so when creating an Experiment from INI files- simply
  hit cancel if there is none. You may also do so from the Community
  pane in the Experiment Builder, by selecting the pop-up menu on the
  root folder in the Tree on the right.
- When dumping out INI files, a communities.xml file is also generated
  (bug 1453, also courtesy of Mobile Intelligence, Inc).
- When dragging Hosts or Nodes onto a community in the Community
  editor, show only the resulting Agents in the Community, not the
  Nodes or Hosts. Bug 1578.
- Community View now shows communities collapsed initially (bug 1522).
- Experiment export scripts now export communities correctly (bug 1563).
- Handle dragging in Host and Nodes and Agents consistently in the
  Community Editor (bug 1523).

Other new features:
- The menu items in the Organizer and Experiment Builder have been
  split up, for ease of use. No functionality has changed. (Bug 1581)
- Unsupported feature: INI files dumped from the Experiment Builder
  now _may_ be runnable, with one small edit. You must edit the Agent
  INI file that contains the GLSInitServlet, usually named
  "NCA". Follow the instructions in the comment. Note however that you
  must have previously saved your Experiment to the database. Again,
  this functionality is not fully supported.
- Allow loading multiple recipes from the database at once. To do so,
  simply Control- or Shift-click to select the set of recipes you want
  to load. We also now allow dragging multiple recipes at once into an
  Experiment. Simply use Ctrl-click or Shift-click to select more than
  one recipe. (Bug 932)
- You can now view the contents of an Agent or Node from the Experiment Builder (bug
  1470). Simply invoke the pop-up menu on the Node or Agent you want
  to view, and select "Show Components".

Other Bug fixes:
- If CSMART crashes, and you were using the workspace file, bring
  components back as fully editable and usable as possible.
- When renaming a Recipe, change only the name in the database rather
  than save an entirely new recipe under the new name.
- Forbid adding a recipe to an Experiment twice.
- Forbid adding two Agents with the same name to an Experiment via
  recipes. Note that no Node in your society may have the same name as
  an Agent in your society, as Nodes have a Node Agent whose name is
  that of the Node.
- When configuring a Society from scratch in the Configuration
  Builder, give the user an editable drop-down of all known Plugins or
  Binders in the database, not just those in the Society so far (bug
  1443).
- If Topology servlet not loaded, show only one error dialog (not one
  per Agent). Bug 1585.
- Extra checks to avoid disturbing base assemblies (bug 1554)
- Support new PGs having multiple-values for a single slot. Just be
  sure the new value is curly-brace or square-bracket enclosed. Bug
  1780.
- Fixed bug where non-ClusterImpl Agent classes were ignored.
- Fixed problem with experiment names that contained quotes (Bug
  1790).
- Add some defaults, improved help in editing societies.
- Multiple additional error checks (bug 1748).
- Bug 1764: Try extra hard when finding unknown properties on load
  from DB.
- Bug 1726: Make sure child names of components are unique.
- Fixed bug where changing value of Agent Name property had no effect
  (bug 1809).

Release 9.4:
This release constitutes the last major Cougaar release for this
calendar year.  This release includes some database schema changes,
and a new communities editing tool. It also includes numerous
usability improvements, and incorporates all of the changes made after
the official 9.2.2 patch release along that branch (see the
9.2.2.1 release notes, below). In particular,
this includes the new ability to export to XML the host-node-agent
(HNA) mapping for an experiment, for preservation when upgrading or
re-loading a CSMART database for example, and then re-importing
(without having to explicitly re-assign Agents to Nodes, etc).

In detail:
- Domain database has been updated. To get the latest data, reload the
  mysqldump.txt file (found in dbmsq/data/mysql), using a command like:
mysql -f -u [user] -p[pw] [db] < mysqldump.txt
- Configuration database schema has changed. To support the UL
  Adaptive Logistics thread, the configuration CFW database now supports
  multiple plugins of the same class in the same Agent. If you plan to
  run the Adaptive Logistics society, you must re-load your
  configuration database, following the instructions in
  InstallAndTest.html
- New Communities editing window. This window allows users to easily
  create new Communities with arbitrary attributes, and add Agents (or
  Communities) to those Communities, with arbitrary attributes. All
  community data is stored on a per-experiment basis, and loaded at
  run-time using the standard DBInitializer. To use this editor,
  select the "Communities" tab in the Experiment Builder.
- Force Agent Insertion recipes to always include an Org Asset. This
  way, all non-Node Agents appear in the CSMART Society Monitor. (bug
  1446)
- Now deleted or renamed queries in recipeQueries.q are
  reflected in the recipe query drop-down and at save time. Note that,
  as before, if you remove a query, any recipes that used it will not be
  invalid and need to be both modified and re-saved. (bug 1428)
- Changed label for using built-in recipes to say "From
  Template" for clarity - no functionality changed. (bug 1469)
- Added the CommunityPlugin to all regular Agents in base 1AD CSMART
  Experiments. You no longer need to add it to your domain Agents. However, you
  must still add it to any NodeAgents or newly added Agents where you
  want to do community work.
- In addition, note that the default configs/common/LDMDomains.ini now
  loads the Community Domain, so no recipe is required to do so.
- Added standard Mobility support. The mobility domain is also now
  included in LDMDomains.in. The MoveAgentServlet is now part of the
  Default_Servlets recipe that comes with base experiments (labeled MobilityServlet). Note that if
  you want this servlet available in NodeAgents you must separately add
  it there, or change the target query in the Default_Servlets
  recipe. Finally, there are two other default recipes now included in
  experiments for adding the other two required mobility
  components. These are the NodeMobilityPlugin and the
  AgentMobilityPlugin recipes. Most users need not modify these
  recipes.
- If a drop-down list is open (ie in the Configuration
  Builder) and you kill that window, you get an NPE. This appears to be
  a JDK bug, and will be logged as a warning. (bug 1439)
- Changed the default Console Node view size to 300,000 characters
  (from 50,000). Bug 1309.
- CSMART code was modified to correctly handle various database IDs. (bug
  1465). This solves the "duplicate plugin" problem for the UL
  Adaptive Logistics team.
- Bug 1504: Made persistence.clear=true a default Node argument. Users
  may now modify this if they _want_ to use old persistence
  information. Otherwise, behavior is as before: CSMART clears old
  persistence information before starting a new run. Note however that
  the Node->Restart functionality from the CSMART Console will use saved
  persistence information to start up the Node from where it left off.
- Bug 1524: Default results directory if not set so HNA exports in
  same place.
- Bug 1494: Display correct Agent's contents in Console Node info screen.
- Bug 533: Improved javadoc to include @property tags.
- Bug 789: Added the Cougaar javadoc Parameters.html to the Experiment
  Builder Help menu for ideas on some Node Properties to set.
- The Host Configuration Builder is now laid out horizontally, for ease of use
  (bug 1447).
- Bug 1441: Restricted recipe arguments that need to be positive to a
  positive range.
- Bug 1474 (partial fix): Allow Nodes and Hosts to have same name, but
  not Nodes and Agents.
- Bug 1446: Included the JDBC URL for the CSMART DB in the version
  information printed on error and at startup. And re-enable it on the
  Help menu under Show Version.
- Bug 1414: Dis-allow creating new recipes, etc inside experiments, etc.
- Avoid NPE when doing drag-n-drop (bug 1456).
- Bug 1464: Ensure that components added via a recipe with a specific
  name do not conflict with components of same class in the database.
- Fix an unreported bug causing NPEs on reading a non-Default
  workspace file.
- Bug 1377: Sort Servlet recipe property names to help avoid
  errors. Properties now have an invisible flag, used to avoid
  displaying invisible properties usually. Add a method however to get
  at invisible properties. This allows copying, saving, & restoring
  sometimes-invisible properties to work, avoiding the errors.
- Bug 950: Make exported Recipe IDs include recipe name, to ensure
  uniqueness
- Bug 1401: Change a primary key to a unique key, to avoid possible
  corrupted MySQL index files.
- Small changes to ComponentBase to avoid society / experiments
  becoming modified during a copy.

Release 9.2.2.1:
This point release along the 9.2.2 branch includes some last minute
additions for the June Ultra*Log integration. Changes include:
- Bug 1363: Allow user to export an Experiment's Host-Node-Agent
  mapping to an XML file, from a menu item in the Experiment
  Builder. This file can then be imported, also from the File menu, on
  later new experiments (even after reconstructing the CSMART DB). All
  Agents that exist in the experiment on import, will be assigned to
  Nodes with the names in the XML file (creating new Nodes if
  necessary), and similarly Nodes will be assigned to Hosts (creating
  new Hosts if necessary). Note that only the Host-Node-Agent mapping
  is exported, not the -D arguments or the components in any of the Nodes.
- Bug 950 (partial fix): Exported recipes now include the recipe name
  as part of the ID, to ensure uniqueness.
- Bug 1351: Read components in insertion order from DB, to ensure
  specified load order is preserved.
- Bug 1428: The drop-down list of recipe queries when configuring a
  recipe now refreshes to add new queries added to your
  recipeQueries.q file while running CSMART. Note that deleted /
  renamed queries will still appear, as they are still available for
  use by recipes during this run of CSMART.
- Bug 1364 (partial fix): Add Dos version of recipe export script
  (export-recipe.bat)
- Bug 1399: Node Info window, when you click on the agent name, now
  shows you _all_ sub-components, not just Plugins.
- Bug 1387: Allow ComponentTypeProperty to accept any component type
  (aka insertion point). This fixes the bug that prevented
  SpecificInsertionRecipes from adding components at non-standard
  insertion points.
- Bug 1396: Disable the un-used ImpactsLP in the CSMARTDomain. By
  disabling it, we avoid using the CSMART logger un-necessarily.
- Bug 1457: Allow Nodes to contain non-Agents when dumping HNA maps to XML.
- Bug 1408: Remove setPreferredSize call so scroll bars in Properties
  pane of Experiment Builder work again.
- Bug 1377: Copying / saving AgentInsertionRecipe without an OrgAsset
  or ServletGroupInsertionRecipe with an extra servlet added caused
  NPEs. This fix avoids those errors, without however solving the
  underlying problem. You are currently forbidden from creating an
  Agent through an AgentInsertionRecipe without including an
  OrgAsset. You are similarly forbidden from adding non-standard
  servlets using the ServletGroupInsertion Recipe.

Release 9.2.2:
- Solved bug 1304 & related 1279. Note that now that this is solved, we
  have reverted the default for doWorkspace! By default, the workspace
  is no re-enabled. As before, the startup scripts indicate how to
  disable this.
- Added support for specifying component load priority (bug 1310).
- Added new Topology view in Society Monitor for viewing mobile
  Agents.
- Added new built-in recipe for adding the Adaptivity Engine and
  related components to a set of Agents. For details on the Adaptivity
  Engine, see the Cougaar Developers Guide. For details on using this
  recipe, see the online help.
- Upgrade MySQL JDBC driver (bug 1347)
- Mostly fixed errors with database load scripts. Windows users who
  retrieve CSMART via CVS or who want to edit the database files should
  use Cygwin and the sh load scripts. (bug 1321)
- Add icons for recipes, societies, and experiments in Organizer
- Unique names are now created with a number in square-brackets, not
  just by appending a number.
- Mostly fixed export scripts (bug 1231)
- Fixed bug 1323 (no prompt to name recipes)
- Fix some bugs with Property iterators, etc.
- Fix bugs allowing user to make edits during a save (bugs 1339,1078)
- Better error messages on failure to reach servlets (bug 1302)
- Fix bug in modification recognition (bug 1335)
- Fixed some bugs on when things are editable, runnable (bug 1326, others)
- Add file-menu option to save un-saved items

Release 9.2.1:
- Multiple bug fixes
- Note that changes to the default AppServer properties file to use
the Java "server" VM on some Nodes may require Path changes on some systems, when
you upgrade your AppServer properties file. See the Install
instructions (./InstallAndTest.html) for details.
- Add Community tables to CSMART DB to begin support for Community configuration
- Performance improvements (bug 1226)
- Allow running Nodes without any Agents (bug 1265)
- Address errors using Agent Insertion Recipes (bugs 1240, 1245)
- Add Dos DB dump scripts (bug 1229)
- Address servlet errors with GLS Init window (bug 1215) and Society
Monitor (bug 1241)
- New option to not read or write a Workspace file: Add the CSMART -D
argument org.cougaar.tools.csmart.doWorkspace=false to use this. Note
that this means you will have to re-load your Experiments and recipes
from the database every time you restart CSMART.
- Allow specifying $HOST in Node command line arguments to indicate
the name of the machine on which the Node will be running (bug 861)
- Address errors in enabling tools (bug 1268)
- Address errors auto-running societies (bug 1269)
- Address errors with non-unique folder names (bug 1267)
- Remove obsolete Heartbeat in console (bug 1247)
- Avoid double-counted warnings on recipe change (bug 1107)
- Disconnect GLS UI when society stops to avoid warning (bug 1055)
- Ensure possible to use Analyzer to view old Experiment results
- Use lower-case database table names throughout
- Remove unused database tables (bug 1225)
- Known issues: There are some rare NPEs (bugs 1304, 1279). To avoid
these, try setting the doWorkspace flag to false (see above). Some
elements of experiments are not copied - like Node descriptions, etc
(bug 1076). We have seen intermittent Swing exceptions while running a
society (bug 1104). Finally, command-line scripts to export/copy experiments &
recipes do not work (bugs 1231, 950).

Release 9.2:
- New ability to load societies from INI files
- New UIs to edit societies within CSMART
- Infrastructure support for recipes that do removal / modifications
- New ability to create a society from the recipe/society combination in an experiment
- Configuration database cleanup, and load process changes (see
InstallAndTest.html)
- Fixes to improve accuracy of debug output INI files
- Fix support for adding Node Binders with recipes
- Add support for adding plugins, binders to Node Agents via recipes
(try a SpecificInsertionRecipe where the target query specifies _Nodes_!)
- Add support for adding arbitrary components to agents
- Move to JDK1.4
- Bug fixes
- Known issue: CSMART is slow - multiple minutes to load & start a Full-1AD
  society. Improvements for this will be added for a 9.2.1 patch
  release in mid-May. See bug # 1226
- Known issue: Society Monitor fails to contact all Agents. You get an error
  message listing the agents it fails to contact. This includes every
  Node Agent, but also Agents that have working CSMART servlets.
  See bug # 1241
- Known issue: Copying an Agent Insertion Recipe causes NPE. See bug # 1240
- Known issue: If you hit "Connect" in the GLS Init Window in the console
  too early, the servlet will not update after you publish the OPLAN. To
  get around this, wait until the society has quiesced before hitting the
  Connect button. If you have already done so, use the stand-alone
  GLS UI in CIP/bin/GLSInit.[bat/sh]  See bug# 1215
- Known issue: Experiment and recipe export scripts may no longer work.
  As a workaround, try using the complete DB export scripts in
  csmart/data/database/scripts/mysql/dump_1ad_mysql.sh  See bug # 1231 (and 1229)

Release 9.0:
- The CSMART required Cougaar 3rd party jar file: grappa1_2_bbn.jar has been changed
  to grappa1_2.jar. The BBN modifications in the prior jar are now included in the
  standard Grappa jar.
- Repackage and code cleanup for readability
- Use Servlets instead of PSPs. You must now explicitly add
a PSP to your society, including adding the PlanServerPlugin, if you
really want to run a PSP.
- Remove use of ConfigurationWriter in talking to the AppServer
- New ServletGroupInsertion recipe for inserting sets of servlets
- Default inclusion of basic servlets with built-in experiments
- Use new Cougaar Logging Service
- New Servlet based GLS / Oplan UI within console
- Updated build script to Ant1.4.1
- New File menu items for easy access
- Basic version information written to log file, available from Help menu
- Disabled built-in societies, pending full database support
- Due to above, experiments with multiple trials are temporarily
disabled
- Results (metrics & log files) directory now defaults to CIP/results,
and is set from a global file menu, not on a per-experiment basis

Release v8.8.0
This release represents all of the fixes made during integration on
the 8.6.2 release

Release v8.6.2, Cougaar v8.6.2:
A patch release, with multiple usability improvements. Emphasis
is on supporting much larger societies, the 1AD society in particular,
running off of MySQL databases.
- Upgrade DB to use 1AD society

- Metrics and Impacts merged into general purpose concept: Recipes.
Use Recipes to define steps to take to modify an experiment. Recipes
typically add a plugin, binder, or agent to one or more spots in a
society.

- MySQL Thread selection now supported

- Class 9 Threads now work

- Store hosts, nodes with experiment. Permit deleting hosts from experiment

- Save all host, node attributes in database

- Support setting non -D arguments, global -D arguments on Nodes (with
  defaults provided), showing these in Node info screen on console, and possibly
  loading a set of values from a file

- Support a delay between Node launches, default to 0

- Sort hosts, nodes, and support find operations

- Allow user to force edit of a previously run experiment, or recipe

- Better support for data validation in Config Builder

- Add ability to individually kill & restart Nodes

- Support plan view filtering by agent

- Add tab in ExperimentBuilder to show selected threads & groups

- New debug function to write out old style configuration files

- Simple database export and manipulation scripts added


Release v8.6.0, Cougaar v8.6.0:
CSMART is now the preferred means for running large Cougaar
societies. Beginning with this release, CSMART version numbers track
Cougaar version numbers. See the new more complete installation instructions.

- Added support for configuring and running societies from a
  configuration database.

- Added a configuration database which defines several complex Cougaar
societies.

- Fixed Impacts so that all parameters are controlled from the
configurable component.

- Added more metrics to Basic Metric

- Added ability to search / monitor Node console output streams

- Added complex find function in Society Monitor Plan View

Release v0.4.1, Cougaar v8.4.1:
- Numerous bug fixes

- Add support for displaying LocationSchedule information in Agent view

- Initial support for format-independent initialization data generation:
preparing to convert to a purely database-driving society
configuration.

- Agent view uses arrows between agents to indicate relationships.

- Separate impacts and metrics into separate components that are
separately added to societies.

- Support search in Node STDOUT panes in console, including ctrl-s
(search) and ctrl-t (find again) support

- Limited support for experiments whose parameters vary the number of
agents - new unassigned agents are assigned arbitrarily to existing
Nodes.

- Complete support for ABC impacts on message transport


Release v0.4, Cougaar v8.4:
- This release adds support for experiments with multiple trials. Set
a property to <empty> in the ConfigurationBuilder, and you can vary it
in the ExperimentBuilder. See the online help for details.

- The Community View now works in the Society Monitor. However, it is
only interesting for societies the include the CommunityPG on their
Entities (like the ABC Society).

- This release also includes preliminary support for configuring
  arbitrary Cougaar components, and mixing and matching components
  among societies.

- This release includes multiple bug fixes and smaller enhancements.

- Beginning with this release, CSMART is included with the standard
  Cougaar release, and no longer as a separate module.

- The CSMART required jar file: grappa1_2.jar has been
  replaced. Instead, use the Cougaar 3rd party jar file:
  grappa1_2_bbn.jar

- Old & new CSMART users should see the CSMART-Install document for
  new, simplified installation instructions.
